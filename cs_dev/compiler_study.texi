\input texinfo

@documentlanguage en
@documentencoding UTF-8

@settitle Compiler Sample Code Study

@copying
This manual is for Document, version 1.0.

Copyright @copyright{} years free time team.

@quotation
Permission is granted to
@end quotation
@end copying

@titlepage
@title name-of-manual-when-printed en
@subtitle subtitle-if-any
@subtitle second-subtitle
@author author

@c  The following two commands
@c  start the copyright page.
@page
@vskip 0pt plus 1filll
@insertcopying

Published by
@end titlepage

@c So the toc is printed at the start.
@contents

@ifnottex
@node Top
@top compiler sample code study

This manual is for program, version version.
@end ifnottex

@menu
* mini_c::
* llvm_essential code::
@c * Copying::  free time team
@end menu

@node mini_c
@chapter mini_c
本节内容可以对照 《计算机系统开发与优化实战》第2.4节。

mini_c 是一个玩具编译器，它由5000行左右的C语言代码实现，便于学习。
这个编译器包括前端和后端两个部分，前端主要包括词法分析、语法分析、语义分析，以及与它们交互的符号表和错误处理等。
在后端，开发人员手动设计与实现了一个解释器，该解释器专门用于解释执行mini_c生成的仿8086汇编代码。

代码仓可以用以下命令clone下来:
@example
git clone https://gitee.com/zzyjsjcom/computer_dev
@end example

进入子目录 mini_c 就可以看到源代码了。

@example
cd mini_c
make run

cd front_end && make
make[1]: Entering directory '/home/zzy/disk2/practice/mini_c/front_end'
cc   -c -o main.o main.c
cc   -c -o scan.o scan.c
cc   -c -o parser.o parser.c
cc   -c -o tools.o tools.c
cc   -c -o code.o code.c
cc   main.o scan.o parser.o tools.o code.o   -o main
make[1]: Leaving directory '/home/zzy/disk2/practice/mini_c/front_end'
cd back_end && make
make[1]: Entering directory '/home/zzy/disk2/practice/mini_c/back_end'
cc   -c -o zm_main.o zm_main.c
cc   -c -o zm_exec.o zm_exec.c
cc   -c -o zm_loade.o zm_loade.c
gcc -o zm_main zm_main.o zm_exec.o zm_loade.o
make[1]: Leaving directory '/home/zzy/disk2/practice/mini_c/back_end'
cp front_end/main main && cp back_end/zm_main zm_main
./main test_proc.c
./zm_main
Please input a integer number:1

The result is 5050
@end example

@node llvm_essential code
@chapter llvm_essential code
本节内容可以对照 《计算机系统开发与优化实战》第2.5节。

《llvm essentials》这本书是学习llvm很不错的资料，但可惜的是这本书上的代码太老了，在新的编译器上编译不过。
首先通过下面的命令安装 clang-6 编译器，目前绝大部分的主流ubuntu版本，都支持 clang-6。但即使是clang-6 也会有很多代码编译不过。
@example
sudo apt-get install clang-6
@end example

首先使用以下命令 clone 代码仓:
@example
git clone https://gitee.com/zzyjsjcom/computer_dev
@end example
切换到目录：llvm_essentials_code，其中子目录 c1 代表第一章的代码，c2代表第二章的代码，依此类推。
目前 c1 ~ c3 的代码，都已经调试通过，直接切换到对应的目录，执行 make，就可以编译了。
这些都是很短小的代码，非常便于初学，前三章学完了，就可以到 llvm 官网跑更大型一点的例子了。

@bye
